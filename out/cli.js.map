{"version":3,"file":"cli.js","sources":["../src/lib/Error.ts","../src/lib/helpers.ts","../src/model/Puzzle.ts","../src/cli.ts"],"sourcesContent":["export class AppError extends Error {\n\n  constructor(message: string) {\n    super(message);\n    // Ensure the name of this error is the same as the class name\n    this.name = this.constructor.name;\n    // This clips the constructor invocation from the stack trace.\n    // It's not absolutely essential, but it does make the stack trace a little nicer.\n    //  @see Node.js reference (bottom)\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n  get info(): string | null {\n    return null;\n  }\n\n}\n","export function getCoordinates(index: number) {\n  return [\n    index % 9, // col\n    Math.floor(index / 9), // row\n  ];\n}\n\nexport function getSquare(x: number, y: number) {\n  return Math.floor((x / 3) % 3) + Math.floor(y / 3) * 3;\n}\n\nexport function getIndex(x: number, y: number) {\n  return y * 9 + x;\n}\n","/* tslint:disable:max-classes-per-file */\n\nimport colors from 'chalk';\nimport { EOL } from 'os';\nimport stringWidth from 'string-width';\nimport { AppError } from '../lib/Error';\nimport { getCoordinates, getIndex, getSquare } from '../lib/helpers';\n\nconst indexesIn = {\n  col: new Array(9).fill(0).map(() => []),\n  row: new Array(9).fill(0).map(() => []),\n  square: new Array(9).fill(0).map(() => []),\n} as { [key: string]: number[][] };\n\nconst position = new Array(81).fill(0)\n  .map((_, i) => {\n    const [x, y] = getCoordinates(i);\n    const square = getSquare(x, y);\n\n    indexesIn.row[y].push(i);\n    indexesIn.col[x].push(i);\n    indexesIn.square[square].push(i);\n\n    return { x, y, square };\n  });\n\nconst affectedFields = new Array(81).fill(0).map((_, index) => {\n  const { x, y, square } = position[index];\n  return Array.from(new Set(\n    indexesIn.col[x]\n      .concat(indexesIn.row[y])\n      .concat(indexesIn.square[square])\n      .filter((i) => (i !== index)),\n  ));\n});\n\ntype FieldValue = number | null;\ninterface FieldPosition { x: number; y: number; }\ninterface PossibleValues {\n  index: number;\n  possibleValues: Set<number>;\n}\n\ninterface BaseFillResult {\n  complete: boolean;\n  emptyFields: number[];\n  iterations: number;\n  duration: number;\n}\n\ntype FillResult<T> = BaseFillResult & (T extends true ? {\n  leastPossible: PossibleValues;\n} : {\n  leastPossible: PossibleValues;\n});\n\nfunction pad(text: string, length: number) {\n  const diff = text.length - stringWidth(text);\n\n  return text.padEnd(length + diff);\n}\n\nexport class PuzzleError extends AppError {\n\n  public puzzle: Puzzle;\n  public position?: FieldPosition;\n\n  constructor(message: string, { puzzle, position: pos }: {\n    puzzle: Puzzle,\n    position?: FieldPosition,\n  }) {\n    super(message);\n\n    this.puzzle = puzzle;\n    this.position = pos;\n  }\n\n  get info() {\n    return this.puzzle.stringValue({\n      highlight: this.position && {\n        ...this.position,\n        format: colors.underline.bold.red,\n      },\n    });\n  }\n\n}\n\nexport default class Puzzle {\n\n  public static parse(puzzleString: string) {\n    const values = puzzleString.trim().split('')\n      .reduce((result, current) => {\n        if (current === EOL) { return result; }\n\n        return result.concat(parseInt(current, 10) || null);\n      }, [] as FieldValue[]);\n\n    return new Puzzle({\n      values,\n    });\n  }\n\n  private values: FieldValue[];\n  private prefilled: boolean[];\n\n  constructor({ values }: { values: FieldValue[] }) {\n    if (values.length !== 81) {\n      throw new AppError(`A puzzle must consist of 81 values, got ${values.length}`);\n    }\n\n    this.values = values;\n    this.prefilled = values.map((v) => Boolean(v));\n  }\n\n  public _possibleValues(index: number) {\n    return affectedFields[index]\n      .reduce((possible, current) => {\n        if (index === current) { return possible; }\n\n        const exclude = this.values[current];\n        if (exclude) {\n          possible.delete(exclude);\n        }\n\n        return possible;\n      }, new Set<number>([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n\n  }\n\n  public validate() {\n    const reportError = (error: Error) => {\n      throw error;\n    };\n\n    this.values.forEach((value, index) => {\n      const possibleValues = this._possibleValues(index);\n\n      if (possibleValues.size === 0) {\n        const { x, y } = position[index];\n\n        reportError(new PuzzleError(`Invalid puzzle: ${value ?\n            `Field ${x} ${y} cannot contain \\`${value}\\`` :\n            `No values possible in field ${x} ${y}`\n          }`, {\n          position: { x, y },\n          puzzle: this,\n        }));\n      }\n    });\n  }\n\n  public fill(): FillResult<boolean> {\n    // Prepare stats\n    let iterations = 0;\n    const start = Date.now();\n\n    // Actual iteration\n    let emptyFields = this.values\n      .reduce((empty, value, index) => (value ? empty : empty.concat(index)),\n        [] as number[]);\n\n    const iterate = (): FillResult<boolean> => {\n      iterations++;\n\n      let foundOne = false;\n      let leastPossible: { possible: number } & PossibleValues | undefined;\n\n      emptyFields = emptyFields.reduce((empty, index) => {\n        const possibleValues = this._possibleValues(index);\n        const possible = possibleValues.size;\n\n        if (possible === 0) {\n          const { x, y } = position[index];\n\n          throw new PuzzleError(`No values possible in field ${x} ${y}`, {\n            position: { x, y },\n            puzzle: this,\n          });\n        } else if (possible === 1) {\n          foundOne = true;\n          this.values[index] = Array.from(possibleValues)[0];\n          return empty;\n        } else {\n          if (!leastPossible || possible < leastPossible.possible) {\n            leastPossible = { possible, index, possibleValues };\n          }\n        }\n\n        return empty.concat(index);\n      }, [] as number[]);\n\n      if (foundOne && emptyFields.length) {\n        return iterate();\n      }\n\n      return {\n        complete: !emptyFields.length,\n        duration: Date.now() - start,\n        emptyFields,\n        iterations,\n\n        // For solver\n        leastPossible: (leastPossible as PossibleValues),\n      };\n    };\n\n    return iterate();\n  }\n\n  public fillField(indexOrPosition: number | FieldPosition, value: number) {\n    const index = typeof indexOrPosition === 'number' ?\n      indexOrPosition :\n      getIndex(indexOrPosition.x, indexOrPosition.y);\n\n    this.values[index] = value;\n  }\n\n  public insertValues(puzzle: Puzzle) {\n    this.values = puzzle.values;\n  }\n\n  public stringValue({ highlight, fieldValue }: {\n    highlight?: FieldPosition & { format: (text: string) => string },\n    fieldValue?: (field: FieldPosition & { square: number, index: number }) => string,\n  } = {}) {\n    const field = fieldValue || (({ index }) => this.values[index] || ' ');\n    const fieldWidth = 1;\n    const totalFieldWidth = fieldWidth + 2;\n\n    const line = (start: string, middle: string, end: string = start) => `${start}${\n      new Array(3).fill('─'.repeat(3 * totalFieldWidth)).join(middle)\n    }${end}`;\n\n    let result = `${line('┌', '┬', '┐')}${EOL}`;\n\n    for (let y = 0; y < 9; y++) {\n      if (y === 3 || y === 6) {\n        result += `${line('├', '┼', '┤')}${EOL}`;\n      }\n\n      for (let x = 0; x < 9; x++) {\n        if (x === 0 || x === 3 || x === 6) {\n          result += '│';\n        }\n\n        const index = getIndex(x, y);\n        const square = getSquare(x, y);\n\n        const c = (highlight && highlight.x === x && highlight.y === y && highlight.format) ||\n          (!this.prefilled[index] && colors.green) ||\n          colors.reset;\n\n        const value = c(`${field({ index, x, y, square })}`);\n        result += ` ${pad(value, fieldWidth)} `;\n      }\n\n      result += `│${EOL}`;\n\n      if (y === 8) {\n        result += line('└', '┴', '┘');\n      }\n    }\n\n    return result;\n  }\n\n  public toString() {\n    return this.stringValue();\n  }\n\n  public clone(): Puzzle {\n    const copy = new Puzzle({\n      values: this.values.slice(0),\n    });\n\n    copy.prefilled = this.prefilled;\n\n    return copy;\n  }\n\n}\n","import colors from 'chalk';\nimport { readFile as _readFile } from 'fs';\nimport parseArgs from 'mri';\nimport { EOL } from 'os';\nimport ms from 'pretty-ms';\nimport { promisify } from 'util';\nimport { solvePuzzle } from '.';\nimport { bin, version } from '../package.json';\nimport { AppError } from './lib/Error';\nimport Puzzle from './model/Puzzle';\n\nconst readFile = promisify(_readFile);\n\nconst parserOptions = {\n  alias: {\n    'all-at': ['a', 'allAt'],\n    'f': 'file',\n    'h': 'help',\n    'p': 'puzzle',\n    'v': 'version',\n  },\n  string: ['file', 'puzzle', 'all-at'],\n};\n\ninterface CliArgs {\n  _: string[];\n  help?: boolean;\n  version?: boolean;\n  file?: string;\n  puzzle?: string;\n  allAt?: string;\n}\n\n/* tslint:disable:no-console */\nconst print = console.log;\nconst printError = console.log;\n/* tslint:enable:no-console */\n\nexport function printPuzzle(puzzle: Puzzle, options = {}) {\n  print(puzzle.stringValue(options));\n}\n\nconst name = Object.keys(bin)[0];\nconst usage = `Usage: ${name} [command=solve] [options...]\n\nAvailable commands:\n\n  solve         Solve puzzles\n  print         Print puzzles\n  validate      Valdate puzzles\n\nSpecify a puzzle:\n\n  --file, -f    Read puzzle from file               [string]\n  --puzzle, -p  Specify puzzle directly             [string]\n  --all-at      Read puzzles line-by-line from file [string]\n\nGeneral options:\n\n  --help, -h    Show this help                      [boolean]\n  --version, -v Print version                       [boolean]`;\n\nexport function printUsage() {\n  print(usage);\n}\n\nclass UsageError extends AppError {\n\n  get info() {\n    return usage;\n  }\n\n}\n\nconst readPuzzleFile = (path: string) => readFile(path, 'utf8').catch((err) => {\n  if (err.code === 'ENOENT') {\n    throw new AppError(`No file at path \\`${path}\\``);\n  }\n\n  throw err;\n});\n\nfunction getOptions() {\n  const parsed = parseArgs(process.argv.slice(2), parserOptions) as parseArgs.Argv & {\n    _: string[],\n  };\n  const command = parsed._[0];\n\n  if (command === 'version') {\n    parsed.version = true;\n    parsed._.shift();\n  } else if (command === 'help') {\n    parsed.help = true;\n    parsed._.shift();\n  }\n\n  return parsed as CliArgs;\n}\n\nexport async function runCli() {\n  const {\n    _: [command = 'solve', ...additionalArgs],\n    puzzle: puzzleOption,\n    file,\n    allAt,\n    help,\n    version: versionOption,\n  } = getOptions();\n\n  if (additionalArgs.length) {\n    throw new UsageError(`Unknown arguments \\`${additionalArgs.join(', ')}\\``);\n  }\n\n  let puzzles: Puzzle[] = [];\n  if (puzzleOption || file) {\n    puzzles = [Puzzle.parse(puzzleOption || await readPuzzleFile(file as string))];\n  } else if (allAt) {\n    puzzles = (await readPuzzleFile(allAt)).split(EOL)\n      .reduce((all, line) => (line.trim()) ? all.concat(Puzzle.parse(line)) : all, [] as Puzzle[]);\n  } else if (!versionOption && !help) {\n    throw new UsageError('Specify a puzzle using the `--file`, `--puzzle` or `--all-at` option');\n  }\n\n  if (command === 'help' || help) {\n    print(usage);\n  } else if (command === 'version' || versionOption) {\n    print(version);\n  } else if (command === 'print') {\n    puzzles.forEach((puzzle) => printPuzzle(puzzle));\n  } else if (command === 'validate') {\n    puzzles.forEach((puzzle) => puzzle.validate());\n  } else if (command === 'solve') {\n    const durations = puzzles.map((puzzle) => {\n      const { duration } = solvePuzzle(puzzle);\n      printPuzzle(puzzle);\n\n      return duration;\n    });\n\n    const stats = durations.reduce((s, current) => ({\n      max: Math.max(current, s.max),\n      min: Math.min(current, s.min),\n      sum: s.sum + current,\n    }), { max: 0, min: Infinity, sum: 0 });\n\n    print(`Solved ${puzzles.length} puzzles in ${ms(stats.sum)}`);\n\n    if (puzzles.length > 1) {\n      print(`  Average: ${ms(stats.sum / durations.length)}`);\n      print(`  Minimum: ${ms(stats.min)}`);\n      print(`  Maximum: ${ms(stats.max)}`);\n    }\n  } else {\n    throw new UsageError(`Unknown command \\`${command}\\``);\n  }\n}\n\nif (!module.parent) {\n  process.title = name;\n  runCli()\n    .catch((err) => {\n      if (err instanceof AppError) {\n        const info = err.info;\n        if (info) {\n          print(info);\n          print('');\n        }\n\n        printError(colors.red(err.message));\n      } else {\n        printError(err);\n      }\n\n      process.exit(1);\n    });\n}\n"],"names":["AppError","Error","constructor","message","name","captureStackTrace","info","getCoordinates","index","Math","floor","getSquare","x","y","getIndex","indexesIn","col","Array","fill","map","row","square","position","_","i","push","affectedFields","from","Set","concat","filter","pad","text","length","diff","stringWidth","padEnd","PuzzleError","puzzle","pos","stringValue","highlight","format","colors","underline","bold","red","Puzzle","parse","puzzleString","values","trim","split","reduce","result","current","EOL","parseInt","prefilled","v","Boolean","_possibleValues","possible","exclude","delete","validate","reportError","error","forEach","value","possibleValues","size","iterations","start","Date","now","emptyFields","empty","iterate","foundOne","leastPossible","complete","duration","fillField","indexOrPosition","insertValues","fieldValue","field","fieldWidth","totalFieldWidth","line","middle","end","repeat","join","c","green","reset","toString","clone","copy","slice","readFile","promisify","_readFile","parserOptions","alias","string","print","console","log","printError","printPuzzle","options","Object","keys","bin","usage","printUsage","UsageError","readPuzzleFile","path","catch","err","code","getOptions","parsed","parseArgs","process","argv","command","version","shift","help","runCli","additionalArgs","puzzleOption","file","allAt","versionOption","puzzles","all","durations","solvePuzzle","stats","s","max","min","sum","Infinity","ms","module","parent","title","exit"],"mappings":"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"}